using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MinecraftTypes;
using Redstone.Types;
using Redstone.Utils;

namespace Redstone.Entities.Living
{
    public class LivingEntity : Entity
    {
        private byte _handStates = 0;

        public bool IsHandActive
        {
            get => FlagsHelper.IsSet(_handStates, (byte) HandStateFlag.HandActive);
            set
            {
                if (value) FlagsHelper.Set(ref _handStates, (byte) HandStateFlag.HandActive);
                else FlagsHelper.Unset(ref _handStates, (byte) HandStateFlag.HandActive);
            }
        }

        public bool OffHandIsActiveHand
        {
            get => FlagsHelper.IsSet(_handStates, (byte) HandStateFlag.ActiveHand);
            set
            {
                if (value) FlagsHelper.Set(ref _handStates, (byte) HandStateFlag.ActiveHand);
                else FlagsHelper.Unset(ref _handStates, (byte) HandStateFlag.HandActive);
            }
        }

        public bool MainHandIsActiveHand
        {
            get => !OffHandIsActiveHand;
            set => OffHandIsActiveHand = !value;
        }

        public bool IsInRiptideSpinAttack
        {
            get => FlagsHelper.IsSet(_handStates, (byte) HandStateFlag.RiptdeSpinAttack);
            set
            {
                if (value) FlagsHelper.Set(ref _handStates, (byte) HandStateFlag.RiptdeSpinAttack);
                else FlagsHelper.Unset(ref _handStates, (byte) HandStateFlag.RiptdeSpinAttack);
            }
        }

        public float Health { get; set; } = 1.0f;

        /// <summary>
        /// 0 if there is no effect.
        /// </summary>
        public VarInt PotionEffectColor { get; set; } = 0;

        /// <summary>
        /// Reduces the number of particles generated by potions to 1/5 the normal
        /// amount if set to true
        /// </summary>
        public bool IsPotionEffectAmbient { get; set; } = false;

        public VarInt NumberOfArrowsInEntity { get; set; } = 0;

        public VarInt NumberOfBeeStingers { get; set; } = 0;

        public OptBlockPos SleepingLocation { get; set; }
    }
}
